#include "std_cbuffer.h"
#include "vsoutput.hs"

SamplerState samp0 : register(s0);
Texture2D colorMap : register(t0);

float4 main(VS_TOON_OUTPUT Input) : S_TARGET_OUTPUT
{
	// Find light direction
	float3 lightDir = normalize(float3(Input.LightPos - Input.FragPos));
	float intensity = dot(lightDir, normalize(Input.FragNormal));
	float4 colourResult;

	if(intensity > 0.90f){
		colourResult = float4(1.0f, 1.0f, 1.0f, 1.0f);
	}else if(intensity > 0.5f){
		colourResult = float4(0.6f, 0.6f, 0.6f, 1.0f);
	}else if(intensity > 0.25f){
		colourResult = float4(0.4f, 0.4f, 0.4f, 1.0f);
	}else{
		colourResult = float4(0.1f, 0.1f, 0.1f, 1.0f);
	}


	return colorMap.Sample(samp0, Input.UV)* colourResult;// * float4(Input.Color, 1.0f);
	//return float4(Input.Color, 1.0f);
}